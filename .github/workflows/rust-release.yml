name: Rust MCP Server Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target_name }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            target_name: linux-amd64
            ext: tar.gz
          - os: macos-13
            target: x86_64-apple-darwin
            target_name: macos-amd64
            ext: tar.gz
          - os: macos-14
            target: aarch64-apple-darwin
            target_name: macos-arm64
            ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            target_name: windows-amd64
            ext: zip
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: mcp-server
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            mcp-server/target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (release)
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p dist
          NAME="evm_mcp-${{ matrix.target_name }}"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            BIN="target/${{ matrix.target }}/release/evm_mcp.exe"
            cp "$BIN" "dist/${NAME}.exe"
            (cd dist && sha256sum "${NAME}.exe" > "${NAME}.sha256")
            powershell -Command "Compress-Archive -Path dist/${NAME}.exe -DestinationPath dist/${NAME}.zip"
            rm "dist/${NAME}.exe"
          else
            BIN="target/${{ matrix.target }}/release/evm_mcp"
            strip "$BIN" || true
            tar -C "target/${{ matrix.target }}/release" -czf "dist/${NAME}.tar.gz" evm_mcp
            (cd dist && sha256sum "${NAME}.tar.gz" > "${NAME}.sha256")
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target_name }}
          path: |
            mcp-server/dist/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Gather files
        run: |
          mkdir -p upload
          find artifacts -type f -name "*" -exec cp {} upload/ \;
          ls -la upload
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            upload/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
